name: push

permissions: read-all

on: [push, pull_request]

jobs:
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --timeout 5m

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm i
        working-directory: frontend

      - name: Lint
        working-directory: ./frontend
        run: pnpm run lint

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs:
      - lint-backend
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build wasm
        run: go build -ldflags="-s -w" -v -o build.wasm ./wasm
        env:
          GOOS: js
          GOARCH: wasm

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs:
      - lint-frontend
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm i
        working-directory: frontend

      - name: Build frontend
        working-directory: frontend
        run: pnpm run build

  test-x86:
    name: Test (x86)
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - build-backend
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Test
        run: go test -v ./...

  test-wasm:
    name: Test (wasm)
    runs-on: ubuntu-latest
    needs:
      - build-backend
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version

      - name: Test
        run: ./.github/wasm_test.sh
        env:
          GOOS: js
          GOARCH: wasm
